{"version":3,"file":"index.js","sources":["../../src/errors.ts","../../src/connectors/ConnectorFortmatic.ts","../../src/connectors/ConnectorFrame.ts","../../src/connectors/ConnectorInjected.ts","../../src/connectors/ConnectorPortis.ts","../../src/connectors/ConnectorProvided.ts","../../src/connectors/ConnectorTorus.ts","../../src/connectors/ConnectorWalletConnect.ts","../../src/connectors/ConnectorWalletLink.ts","../../src/connectors/ConnectorLedger.ts","../../src/utils.ts","../../node_modules/regenerator-runtime/runtime.js","../../src/chains.ts","../../src/providers/index.tsx","../../src/index.tsx","../../src/connectors.ts"],"sourcesContent":["export class ChainUnsupportedError extends Error {\n  constructor(message: string, ...params: any[]) {\n    super(...params)\n    this.name = 'ChainUnsupportedError'\n    this.message = message\n  }\n}\n\nexport class ConnectorUnsupportedError extends Error {\n  constructor(connectorId: string, ...params: any[]) {\n    super(...params)\n    this.name = 'ConnectorUnsupportedError'\n    this.message = `Unsupported connector: ${connectorId}.`\n  }\n}\n\nexport class ConnectionRejectedError extends Error {\n  constructor(...params: any[]) {\n    super(...params)\n    this.name = 'ConnectionRejectedError'\n    this.message = `The activation has been rejected by the provider.`\n  }\n}\n\nexport class ConnectorConfigError extends Error {\n  constructor(...params: any[]) {\n    super(...params)\n    this.name = 'ConnectorConfigError'\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { FortmaticConnector } = await import('@web3-react/fortmatic-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      apiKey,\n    }: {\n      chainId: number\n      apiKey: string\n    }) {\n      if (!apiKey) {\n        throw new ConnectorConfigError(\n          'The Fortmatic connector requires apiKey to be set.'\n        )\n      }\n      return new FortmaticConnector({ apiKey, chainId })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { FrameConnector, UserRejectedRequestError } = await import(\n    '@web3-react/frame-connector'\n  )\n  return {\n    web3ReactConnector({ chainId }: { chainId: number }) {\n      return new FrameConnector({ supportedChainIds: [chainId] })\n    },\n    handleActivationError(err: Error) {\n      if (err instanceof UserRejectedRequestError) {\n        return new ConnectionRejectedError()\n      }\n      if (err.message.startsWith('JSON.parse')) {\n        return new Error(\n          'There seems to be an issue when trying to connect to Frame.'\n        )\n      }\n      return null\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { InjectedConnector, UserRejectedRequestError } = await import(\n    '@web3-react/injected-connector'\n  )\n  return {\n    web3ReactConnector({ chainId }: { chainId: number[] }) {\n      return new InjectedConnector({ supportedChainIds: chainId })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { PortisConnector } = await import('@web3-react/portis-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      dAppId,\n    }: {\n      chainId: number[]\n      dAppId: string\n    }) {\n      if (!dAppId) {\n        throw new ConnectorConfigError(\n          'The Portis connector requires dAppId to be set.'\n        )\n      }\n      return new PortisConnector({ dAppId, networks: chainId })\n    },\n  }\n}\n","import { Connector, EthereumProvider } from '../types'\nimport { ConnectionRejectedError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { ProvidedConnector, UserRejectedRequestError } = await import(\n    '@aragon/provided-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      provider,\n    }: {\n      chainId: number[]\n      provider: EthereumProvider\n    }) {\n      return new ProvidedConnector({\n        provider,\n        supportedChainIds: chainId,\n      })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import { Connector } from '../types'\n\nexport default async function init(): Promise<Connector> {\n  const { TorusConnector } = await import('@web3-react/torus-connector')\n  return {\n    web3ReactConnector({\n      chainId,\n      initOptions,\n      constructorOptions,\n    }: {\n      chainId: number\n      initOptions: any\n      constructorOptions: any\n    }) {\n      return new TorusConnector({ chainId, constructorOptions, initOptions })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectionRejectedError, ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { UserRejectedRequestError, WalletConnectConnector } = await import(\n    '@web3-react/walletconnect-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      rpcUrl,\n      bridge,\n      pollingInterval,\n    }: {\n      chainId: number\n      rpcUrl: string\n      bridge: any\n      pollingInterval: number\n    }) {\n      if (!rpcUrl) {\n        throw new ConnectorConfigError(\n          'The WalletConnect connector requires rpcUrl to be set.'\n        )\n      }\n      if (!/^https?:\\/\\//.test(rpcUrl)) {\n        throw new ConnectorConfigError(\n          'The WalletConnect connector requires rpcUrl to be an HTTP URL.'\n        )\n      }\n      return new WalletConnectConnector({\n        bridge,\n        pollingInterval,\n        qrcode: true,\n        rpc: { [chainId]: rpcUrl },\n      })\n    },\n    handleActivationError(err: Error) {\n      return err instanceof UserRejectedRequestError\n        ? new ConnectionRejectedError()\n        : null\n    },\n  }\n}\n","import 'regenerator-runtime/runtime.js'\nimport { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\nexport default async function init(): Promise<Connector> {\n  const { WalletLinkConnector } = await import(\n    '@web3-react/walletlink-connector'\n  )\n  return {\n    web3ReactConnector({\n      chainId,\n      url,\n      appName,\n      appLogoUrl,\n    }: {\n      chainId: number\n      url: string\n      appName: string\n      appLogoUrl: string\n    }) {\n      if (chainId !== 1) {\n        throw new ConnectorConfigError(\n          'The WalletLink connector requires chainId to be 1.'\n        )\n      }\n      if (!/^https?:\\/\\//.test(url)) {\n        throw new ConnectorConfigError(\n          'The WalletLink connector requires url to be an HTTP URL.'\n        )\n      }\n      return new WalletLinkConnector({ url, appName, appLogoUrl })\n    },\n  }\n}\n","import { Connector } from '../types'\nimport { ConnectorConfigError } from '../errors'\n\n// NOTE: The ledger live path specify which chain and which account is used\n// on the hardware wallet. This should eventually be made dynamic.\nconst LEDGER_LIVE_PATH = \"m/44'/60'/0'/0\"\nconst POLLING_INTERVAL = 12000\n\nexport default async function init(): Promise<Connector> {\n  const { LedgerConnector } = await import('@web3-react/ledger-connector')\n  return {\n    web3ReactConnector({ chainId, url }: { chainId: number; url: string }) {\n      if (!url) {\n        throw new ConnectorConfigError(\n          'The Ledger connector requires url to be set.'\n        )\n      }\n      return new LedgerConnector({\n        url,\n        chainId,\n        pollingInterval: POLLING_INTERVAL,\n        baseDerivationPath: LEDGER_LIVE_PATH,\n      })\n    },\n  }\n}\n","import { Account, EthereumProvider } from './types'\n\nfunction isUnwrappedRpcResult(response: unknown): response is {\n  error?: string\n  result?: unknown\n} {\n  return (\n    typeof response === 'object' && response !== null && 'jsonrpc' in response\n  )\n}\n\nexport function rpcResult(response: unknown): unknown | null {\n  // Some providers don’t wrap the response\n  if (isUnwrappedRpcResult(response)) {\n    if (response.error) {\n      throw new Error(response.error)\n    }\n    return response.result || null\n  }\n\n  return response || null\n}\n\nasync function ethereumRequest(\n  ethereum: EthereumProvider,\n  method: string,\n  params: string[]\n): Promise<any> {\n  // If ethereum.request() exists, the provider is probably EIP-1193 compliant.\n  if (ethereum.request) {\n    return ethereum.request({ method, params }).then(rpcResult)\n  }\n\n  // This is specific to some older versions of MetaMask combined with Web3.js.\n  if (ethereum.sendAsync && ethereum.selectedAddress) {\n    return new Promise((resolve, reject) => {\n      ethereum.sendAsync(\n        {\n          method,\n          params,\n          from: ethereum.selectedAddress,\n          jsonrpc: '2.0',\n          id: 0,\n        },\n        (err: Error, result: any) => {\n          if (err) {\n            reject(err)\n          } else {\n            resolve(result)\n          }\n        }\n      )\n    }).then(rpcResult)\n  }\n\n  // If none of the previous two exist, we assume the provider is pre EIP-1193,\n  // using .send() rather than .request().\n  if (ethereum.send) {\n    return ethereum.send(method, params).then(rpcResult)\n  }\n\n  throw new Error(\n    'The Ethereum provider doesn’t seem to provide a request method.'\n  )\n}\n\nexport async function getAccountIsContract(\n  ethereum: EthereumProvider,\n  account: Account\n): Promise<boolean> {\n  try {\n    const code = await ethereumRequest(ethereum, 'eth_getCode', [account])\n    return code !== '0x'\n  } catch (err) {\n    return false\n  }\n}\n\nexport async function getAccountBalance(\n  ethereum: EthereumProvider,\n  account: Account\n) {\n  return ethereumRequest(ethereum, 'eth_getBalance', [account, 'latest'])\n}\n\nexport async function getBlockNumber(ethereum: EthereumProvider) {\n  return ethereumRequest(ethereum, 'eth_blockNumber', [])\n}\n\nexport function pollEvery<R, T>(\n  fn: (\n    // As of TS 3.9, it doesn’t seem possible to specify dynamic params\n    // as a generic type (e.g. using `T` here). Instead, we have to specify an\n    // array in place (`T[]`), making it impossible to type params independently.\n    ...params: T[]\n  ) => {\n    request: () => Promise<R>\n    onResult: (result: R) => void\n  },\n  delay: number\n) {\n  let timer: any // can be TimeOut (Node) or number (web)\n  let stop = false\n  const poll = async (\n    request: () => Promise<R>,\n    onResult: (result: R) => void\n  ) => {\n    const result = await request()\n    if (!stop) {\n      onResult(result)\n      timer = setTimeout(poll.bind(null, request, onResult), delay)\n    }\n  }\n  return (...params: T[]) => {\n    const { request, onResult } = fn(...params)\n    stop = false\n    poll(request, onResult)\n    return () => {\n      stop = true\n      clearTimeout(timer)\n    }\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { ChainInformation, chainNameOnly } from './types'\n\nconst ETH = {\n  name: 'Ether',\n  symbol: 'ETH',\n  decimals: 18,\n}\n\nconst MATIC = {\n  name: 'Matic Token',\n  symbol: 'MATIC',\n  decimals: 18,\n}\n\nconst ONE = {\n  name: 'ONE Token',\n  symbol: 'ONE',\n  decimals: 18,\n}\n\nexport const KNOWN_CHAINS = new Map<number, ChainInformation | chainNameOnly>([\n  [\n    1,\n    {\n      id: 1,\n      nativeCurrency: ETH,\n      type: 'main',\n      fullName: 'Ethereum Mainnet',\n      shortName: 'Mainnet',\n      explorerUrl: `https://etherscan.io`,\n    },\n  ],\n  [\n    2,\n    {\n      id: 2,\n      type: 'expanse',\n    },\n  ],\n  [\n    3,\n    {\n      id: 3,\n      nativeCurrency: ETH,\n      type: 'ropsten',\n      fullName: 'Ethereum Ropsten',\n      shortName: 'Ropsten',\n      explorerUrl: `https://ropsten.etherscan.io`,\n    },\n  ],\n  [\n    4,\n    {\n      id: 4,\n      nativeCurrency: ETH,\n      type: 'rinkeby',\n      fullName: 'Ethereum Rinkeby',\n      shortName: 'Rinkeby',\n      explorerUrl: `https://rinkeby.etherscan.io`,\n    },\n  ],\n  [\n    5,\n    {\n      id: 5,\n      nativeCurrency: ETH,\n      type: 'goerli',\n      fullName: 'Ethereum Goerli',\n      shortName: 'Goerli',\n      explorerUrl: `https://goerli.etherscan.io`,\n    },\n  ],\n  [\n    8,\n    {\n      id: 8,\n      type: 'ubiq',\n    },\n  ],\n  [\n    42,\n    {\n      id: 42,\n      nativeCurrency: ETH,\n      type: 'kovan',\n      fullName: 'Ethereum Kovan',\n      shortName: 'Kovan',\n      explorerUrl: `https://kovan.etherscan.io`,\n    },\n  ],\n  [\n    100,\n    {\n      id: 100,\n      type: 'xdai',\n    },\n  ],\n  [\n    137,\n    {\n      id: 137,\n      nativeCurrency: MATIC,\n      type: 'matic',\n      fullName: 'Polygon Mainnet',\n      shortName: 'Matic',\n      explorerUrl: `https://polygonscan.com`,\n    },\n  ],\n  [\n    80001,\n    {\n      id: 80001,\n      nativeCurrency: MATIC,\n      type: 'mumbai',\n      fullName: 'Polygon Testnet',\n      shortName: 'Mumbai',\n      explorerUrl: `https://mumbai.polygonscan.com`,\n    },\n  ],\n  [\n    1666700000,\n    {\n      id: 1666700000,\n      nativeCurrency: ONE,\n      type: 'harmonyTest',\n      fullName: 'Harmony ONE Testnet',\n      shortName: 'Harmony Testnet',\n      explorerUrl: `https://explorer.pops.one/`,\n    },\n  ],\n  [\n    1666600000,\n    {\n      id: 1666600000,\n      nativeCurrency: ONE,\n      type: 'harmony',\n      fullName: 'Harmony ONE',\n      shortName: 'Harmony',\n      explorerUrl: `https://explorer.harmony.one/`,\n    },\n  ],\n  [\n    1337,\n    {\n      id: 1337,\n      type: 'local',\n      nativeCurrency: ONE,\n    },\n  ],\n  [\n    5777,\n    {\n      id: 5777,\n      type: 'ganache',\n    },\n  ],\n])\n","import { Provider } from '../types'\n\ndeclare global {\n  interface Window {\n    ethereum: any\n  }\n}\n\nfunction isElectron() {\n  // See https://github.com/electron/electron/issues/2288\n  return (\n    typeof navigator === 'object' &&\n    typeof navigator.userAgent === 'string' &&\n    navigator.userAgent.indexOf('Electron') >= 0\n  )\n}\n\nconst BASE_URL =\n  'https://storageapi.fleek.co/aragonone-team-bucket/wallet-icons'\n\n// See the corresponding prop type, EthereumProviderType, in prop-types.js.\nconst PROVIDERS = new Map<string, Provider>(\n  [\n    {\n      id: 'frame',\n      name: 'Frame',\n      type: 'Desktop',\n      image: `${BASE_URL}/Frame.png`,\n      strings: {\n        'your Ethereum wallet': 'Frame',\n      },\n    },\n    {\n      id: 'metamask',\n      name: 'Metamask',\n      type: 'Desktop',\n      image: `${BASE_URL}/Metamask.png`,\n      strings: {\n        'your Ethereum wallet': 'Metamask',\n      },\n    },\n    {\n      id: 'status',\n      name: 'Status',\n      type: 'Mobile',\n      image: `${BASE_URL}/Status.png`,\n      strings: {\n        'your Ethereum wallet': 'Status',\n      },\n    },\n    {\n      id: 'cipher',\n      name: 'Cipher',\n      type: 'Mobile',\n      image: `${BASE_URL}/Cipher.png`,\n      strings: {\n        'your Ethereum wallet': 'Cipher',\n      },\n    },\n    {\n      id: 'fortmatic',\n      name: 'Fortmatic',\n      type: 'Any',\n      image: `${BASE_URL}/Fortmatic.svg`,\n      strings: {\n        'your Ethereum wallet': 'Fortmatic',\n      },\n    },\n    {\n      id: 'portis',\n      name: 'Portis',\n      type: 'Any',\n      image: `${BASE_URL}/Portis.svg`,\n      strings: {\n        'your Ethereum wallet': 'Portis',\n      },\n    },\n    {\n      id: 'unknown',\n      name: 'Unknown',\n      type: 'Desktop',\n      image: `${BASE_URL}/wallet.svg`,\n      strings: {\n        'your Ethereum wallet': 'your wallet',\n      },\n    },\n  ].map((provider) => [provider.id, provider])\n)\n\n// Get a providers object for a given ID.\nfunction getProvider(providerId: string): Provider | undefined {\n  return PROVIDERS.get(providerId)\n}\n\n// Get a string that depends on the current Ethereum provider.\n// The default string is used as an identifier (à la gettext).\nfunction getProviderString(string: string, providerId = 'unknown'): string {\n  const provider = getProvider(providerId)\n  return (provider && provider.strings[string]) || string\n}\n\n// Get an identifier for the provider, if it can be detected.\nfunction identifyProvider(provider: any) {\n  if (provider && isElectron()) {\n    return 'frame'\n  }\n  if (provider && provider.isMetaMask) {\n    return 'metamask'\n  }\n  return 'unknown'\n}\n\n// Get a provider from its useWallet() identifier.\nfunction getProviderFromUseWalletId(id: string) {\n  if (id === 'injected' || id === 'provided') {\n    return (\n      getProvider(identifyProvider(window.ethereum)) || getProvider('unknown')\n    )\n  }\n  return getProvider(id) || getProvider('unknown')\n}\n\nexport {\n  getProvider,\n  identifyProvider,\n  getProviderString,\n  getProviderFromUseWalletId,\n}\nexport default PROVIDERS\n","import type { ReactNode } from 'react'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  UnsupportedChainIdError,\n  Web3ReactProvider,\n  useWeb3React,\n} from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport {\n  Account,\n  AccountType,\n  Balance,\n  Connector,\n  ConnectorConfig,\n  EthereumProvider,\n  Status,\n  Wallet,\n} from './types'\nimport { getConnectors } from './connectors'\nimport {\n  ConnectionRejectedError,\n  ChainUnsupportedError,\n  ConnectorUnsupportedError,\n} from './errors'\nimport {\n  getAccountBalance,\n  getAccountIsContract,\n  getBlockNumber,\n  pollEvery,\n} from './utils'\n\nimport { KNOWN_CHAINS } from './chains'\n\nimport {\n  getProviderFromUseWalletId,\n  getProviderString,\n} from './providers/index'\n\nconst NO_BALANCE = '-1'\n\nconst UseWalletContext = React.createContext<WalletContext>(null)\n\ntype WalletContext = {\n  addBlockNumberListener: (callback: (blockNumber: number) => void) => void\n  pollBalanceInterval: number\n  pollBlockNumberInterval: number\n  removeBlockNumberListener: (callback: (blockNumber: number) => void) => void\n  wallet: Wallet\n} | null\n\ntype UseWalletProviderProps = {\n  children: ReactNode\n  connectors: { [key: string]: Connector | ConnectorConfig }\n  pollBalanceInterval: number\n  pollBlockNumberInterval: number\n}\n\nfunction useWallet(): Wallet {\n  const walletContext = useContext(UseWalletContext)\n\n  if (walletContext === null) {\n    throw new Error(\n      'useWallet() can only be used inside of <UseWalletProvider />, ' +\n        'please declare it at a higher level.'\n    )\n  }\n\n  const getBlockNumber = useGetBlockNumber()\n  const { wallet } = walletContext\n\n  return useMemo(() => {\n    return { ...wallet, getBlockNumber }\n  }, [getBlockNumber, wallet])\n}\n\nfunction useGetBlockNumber(): () => number | null {\n  const walletContext = useContext(UseWalletContext)\n  const [blockNumber, setBlockNumber] = useState<number | null>(null)\n  const requestedBlockNumber = useRef<boolean>(false)\n\n  const getBlockNumber = useCallback<() => number | null>(() => {\n    if (walletContext === null) {\n      return null\n    }\n\n    requestedBlockNumber.current = true\n    walletContext.addBlockNumberListener(setBlockNumber)\n\n    return blockNumber\n  }, [walletContext, blockNumber])\n\n  useEffect(() => {\n    if (!requestedBlockNumber.current || walletContext === null) {\n      return\n    }\n\n    walletContext.addBlockNumberListener(setBlockNumber)\n    return () => {\n      walletContext.removeBlockNumberListener(setBlockNumber)\n    }\n  }, [requestedBlockNumber, walletContext])\n\n  return getBlockNumber\n}\n\nfunction useWalletBalance({\n  account,\n  ethereum,\n  pollBalanceInterval,\n}: {\n  account?: Account | null\n  ethereum?: EthereumProvider\n  pollBalanceInterval: number\n}) {\n  const [balance, setBalance] = useState<Balance>(NO_BALANCE)\n\n  useEffect(() => {\n    if (!account || !ethereum) {\n      return\n    }\n\n    let cancel = false\n\n    // Poll wallet balance\n    const pollBalance = pollEvery<Balance, any>(\n      (\n        account: Account,\n        ethereum: EthereumProvider,\n        onUpdate: (balance: Balance) => void\n      ) => {\n        let lastBalance = NO_BALANCE\n        return {\n          async request() {\n            return getAccountBalance(ethereum, account)\n              .then((value) => {\n                return value ? JSBI.BigInt(value).toString() : NO_BALANCE\n              })\n              .catch(() => NO_BALANCE)\n          },\n          onResult(balance: Balance) {\n            if (!cancel && balance !== lastBalance) {\n              lastBalance = balance\n              onUpdate(balance)\n            }\n          },\n        }\n      },\n      pollBalanceInterval\n    )\n\n    // start polling balance every x time\n    const stopPollingBalance = pollBalance(account, ethereum, setBalance)\n\n    return () => {\n      cancel = true\n      stopPollingBalance()\n      setBalance(NO_BALANCE)\n    }\n  }, [account, ethereum, pollBalanceInterval])\n\n  return balance\n}\n\n// Only watch block numbers, and return functions allowing to subscribe to it.\nfunction useWatchBlockNumber({\n  ethereum,\n  pollBlockNumberInterval,\n}: {\n  ethereum: EthereumProvider\n  pollBlockNumberInterval: number\n}) {\n  const lastBlockNumber = useRef<number | null>(null)\n\n  // Using listeners lets useWallet() decide if it wants to expose the block\n  // number, which implies to re-render whenever the block number updates.\n  const blockNumberListeners = useRef<Set<(blockNumber: number) => void>>(\n    new Set()\n  )\n\n  const addBlockNumberListener = useCallback((cb) => {\n    if (blockNumberListeners.current.has(cb)) {\n      return\n    }\n\n    // Immediately send the block number to the new listener\n    cb(lastBlockNumber.current)\n\n    // Add the listener\n    blockNumberListeners.current.add(cb)\n  }, [])\n\n  const removeBlockNumberListener = useCallback((cb) => {\n    blockNumberListeners.current.delete(cb)\n  }, [])\n\n  // Update the block number and broadcast it to the listeners\n  const updateBlockNumber = useCallback((blockNumber) => {\n    if (lastBlockNumber.current === blockNumber) {\n      return\n    }\n\n    lastBlockNumber.current = blockNumber\n    blockNumberListeners.current.forEach((cb) => cb(blockNumber))\n  }, [])\n\n  useEffect(() => {\n    if (!ethereum) {\n      updateBlockNumber(null)\n      return\n    }\n\n    let cancel = false\n\n    const pollBlockNumber = pollEvery(() => {\n      return {\n        request: () => getBlockNumber(ethereum),\n        onResult: (latestBlockNumber: number) => {\n          if (!cancel) {\n            updateBlockNumber(\n              latestBlockNumber === null\n                ? null\n                : JSBI.BigInt(latestBlockNumber).toString()\n            )\n          }\n        },\n      }\n    }, pollBlockNumberInterval)\n\n    const stopPollingBlockNumber = pollBlockNumber()\n\n    return () => {\n      cancel = true\n      stopPollingBlockNumber()\n    }\n  }, [ethereum, pollBlockNumberInterval, updateBlockNumber])\n\n  return { addBlockNumberListener, removeBlockNumberListener }\n}\n\nfunction UseWalletProvider({\n  children,\n  // connectors contains init functions and/or connector configs.\n  connectors: connectorsInitsOrConfigs,\n  pollBalanceInterval,\n  pollBlockNumberInterval,\n}: UseWalletProviderProps) {\n  const walletContext = useContext(UseWalletContext)\n\n  if (walletContext !== null) {\n    throw new Error('<UseWalletProvider /> has already been declared.')\n  }\n\n  const [connector, setConnector] = useState<string | null>(null)\n  const [error, setError] = useState<Error | null>(null)\n  const [type, setType] = useState<AccountType | null>(null)\n  const [status, setStatus] = useState<Status>('disconnected')\n  const web3ReactContext = useWeb3React()\n  const activationId = useRef<number>(0)\n  const {\n    account,\n    chainId,\n    library: ethereum,\n    error: web3Error,\n  } = web3ReactContext\n  const balance = useWalletBalance({ account, ethereum, pollBalanceInterval })\n  const { addBlockNumberListener, removeBlockNumberListener } =\n    useWatchBlockNumber({ ethereum, pollBlockNumberInterval })\n\n  // Combine the user-provided connectors with the default ones (see connectors.js).\n  const connectors = useMemo(\n    () => getConnectors(connectorsInitsOrConfigs),\n    [connectorsInitsOrConfigs]\n  )\n\n  const reset = useCallback(() => {\n    if (web3ReactContext.active) {\n      web3ReactContext.deactivate()\n    }\n    setConnector(null)\n    setError(null)\n    setStatus('disconnected')\n  }, [web3ReactContext])\n\n  // if the user switched networks on the wallet itself\n  // return unsupported error.\n  useMemo(() => {\n    if (web3Error instanceof UnsupportedChainIdError) {\n      setStatus('error')\n      setError(new ChainUnsupportedError(web3Error.message))\n    }\n  }, [web3Error])\n\n  const connect = useCallback(\n    async (connectorId = 'injected') => {\n      // Prevent race conditions between connections by using an external ID.\n      const id = ++activationId.current\n\n      reset()\n\n      // Check if another connection has happened right after deactivate().\n      if (id !== activationId.current) {\n        return\n      }\n\n      if (!connectors[connectorId]) {\n        setStatus('error')\n        setError(new ConnectorUnsupportedError(connectorId))\n        return\n      }\n\n      // If no connection happens, we're in the right context and can safely update\n      // the connection stage status\n      setStatus('connecting')\n\n      const [connectorInit, connectorConfig] = connectors[connectorId] || []\n\n      // Initialize the (useWallet) connector if it exists.\n      const connector = await connectorInit?.()\n\n      // Initialize the web3-react connector if it exists.\n      const web3ReactConnector = connector?.web3ReactConnector?.({\n        ...(connectorConfig || {}),\n      })\n\n      if (!web3ReactConnector) {\n        setStatus('error')\n        setError(new ConnectorUnsupportedError(connectorId))\n        return\n      }\n\n      try {\n        // TODO: there is no way to prevent an activation to complete, but we\n        // could reconnect to the last provider the user tried to connect to.\n        setConnector(connectorId)\n        await web3ReactContext.activate(web3ReactConnector, undefined, true)\n        setStatus('connected')\n      } catch (err) {\n        // Don’t throw if another connection has happened in the meantime.\n        if (id !== activationId.current) {\n          return\n        }\n\n        // If not, the error has been thrown during the current connection attempt,\n        // so it's correct to indicate that there has been an error\n        setConnector(null)\n        setStatus('error')\n\n        if (err instanceof UnsupportedChainIdError) {\n          setError(new ChainUnsupportedError(err.message))\n          return\n        }\n        // It might have thrown with an error known by the connector\n        if (connector.handleActivationError) {\n          const handledError = connector.handleActivationError(err)\n          if (handledError) {\n            setError(handledError)\n            return\n          }\n        }\n        // Otherwise, set to state the received error\n        setError(err)\n      }\n    },\n    [connectors, reset, web3ReactContext]\n  )\n\n  useEffect(() => {\n    if (!account || !ethereum) {\n      return\n    }\n\n    let cancel = false\n\n    setType(null)\n\n    getAccountIsContract(ethereum, account).then((isContract) => {\n      if (!cancel) {\n        setStatus('connected')\n        setType(isContract ? 'contract' : 'normal')\n      }\n    })\n\n    return () => {\n      cancel = true\n      setStatus('disconnected')\n      setType(null)\n    }\n  }, [account, ethereum])\n\n  const wallet = useMemo(\n    () => ({\n      _web3ReactContext: web3ReactContext,\n      account: account || null,\n      balance,\n      chainId,\n      connect,\n      connector,\n      connectors,\n      error,\n      ethereum,\n      networkName: chainId\n        ? KNOWN_CHAINS.get(chainId)?.type || 'unknown'\n        : null,\n      providerInfo: connector\n        ? getProviderFromUseWalletId(connector)\n        : getProviderFromUseWalletId('unknown'),\n      reset,\n      status,\n      type,\n    }),\n    [\n      account,\n      balance,\n      chainId,\n      connect,\n      connector,\n      connectors,\n      error,\n      ethereum,\n      type,\n      reset,\n      status,\n      web3ReactContext,\n    ]\n  )\n\n  return (\n    <UseWalletContext.Provider\n      value={{\n        addBlockNumberListener,\n        pollBalanceInterval,\n        pollBlockNumberInterval,\n        removeBlockNumberListener,\n        wallet,\n      }}\n    >\n      {children}\n    </UseWalletContext.Provider>\n  )\n}\n\nUseWalletProvider.propTypes = {\n  children: PropTypes.node,\n  connectors: PropTypes.objectOf(PropTypes.object),\n  pollBalanceInterval: PropTypes.number,\n  pollBlockNumberInterval: PropTypes.number,\n}\n\nUseWalletProvider.defaultProps = {\n  connectors: {},\n  pollBalanceInterval: 2000,\n  pollBlockNumberInterval: 5000,\n}\n\nfunction UseWalletProviderWrapper(props: UseWalletProviderProps) {\n  return (\n    <Web3ReactProvider getLibrary={(ethereum) => ethereum}>\n      <UseWalletProvider {...props} />\n    </Web3ReactProvider>\n  )\n}\n\nUseWalletProviderWrapper.propTypes = UseWalletProvider.propTypes\nUseWalletProviderWrapper.defaultProps = UseWalletProvider.defaultProps\n\nexport {\n  ConnectionRejectedError,\n  ChainUnsupportedError,\n  ConnectorUnsupportedError,\n  UseWalletProviderWrapper as UseWalletProvider,\n  useWallet,\n  getProviderString,\n  getProviderFromUseWalletId,\n  KNOWN_CHAINS,\n}\n\nexport default useWallet\n","import { ConnectorConfig, ConnectorInit } from './types'\nimport initFortmatic from './connectors/ConnectorFortmatic'\nimport initFrame from './connectors/ConnectorFrame'\nimport initInjected from './connectors/ConnectorInjected'\nimport initPortis from './connectors/ConnectorPortis'\nimport initProvided from './connectors/ConnectorProvided'\nimport initTorus from './connectors/ConnectorTorus'\nimport initWalletConnect from './connectors/ConnectorWalletConnect'\nimport initWalletLink from './connectors/ConnectorWalletLink'\nimport initLedger from './connectors/ConnectorLedger'\n\nexport function getConnectors(\n  initsOrConfigs: { [key: string]: ConnectorInit | ConnectorConfig } = {}\n) {\n  const connectors: {\n    [key: string]: [ConnectorInit, ConnectorConfig | null]\n  } = {\n    fortmatic: [initFortmatic, null],\n    frame: [initFrame, null],\n    injected: [initInjected, null],\n    portis: [initPortis, null],\n    provided: [initProvided, null],\n    torus: [initTorus, null],\n    walletconnect: [initWalletConnect, null],\n    walletlink: [initWalletLink, null],\n    ledger: [initLedger, null],\n  }\n\n  for (const [id, initOrConfig] of Object.entries(initsOrConfigs)) {\n    // If initOrConfig is a function, it is an initializer.\n    if (typeof initOrConfig === 'function') {\n      connectors[id] = [initOrConfig as ConnectorInit, null]\n      continue\n    }\n\n    // Otherwise it is a config\n    if (connectors[id]) {\n      connectors[id][1] = initOrConfig as ConnectorConfig\n    }\n  }\n\n  return connectors\n}\n"],"names":["ChainUnsupportedError","Error","constructor","message","params","name","ConnectorUnsupportedError","connectorId","ConnectionRejectedError","ConnectorConfigError","async","init","FortmaticConnector","web3ReactConnector","chainId","apiKey","FrameConnector","UserRejectedRequestError","supportedChainIds","handleActivationError","err","startsWith","InjectedConnector","PortisConnector","dAppId","networks","ProvidedConnector","provider","TorusConnector","initOptions","constructorOptions","WalletConnectConnector","rpcUrl","bridge","pollingInterval","test","qrcode","rpc","WalletLinkConnector","url","appName","appLogoUrl","LedgerConnector","baseDerivationPath","rpcResult","response","isUnwrappedRpcResult","error","result","ethereumRequest","ethereum","method","request","then","sendAsync","selectedAddress","Promise","resolve","reject","from","jsonrpc","id","send","pollEvery","fn","delay","timer","stop","poll","onResult","setTimeout","bind","clearTimeout","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","arg","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","ETH","symbol","decimals","MATIC","ONE","KNOWN_CHAINS","Map","nativeCurrency","fullName","shortName","explorerUrl","BASE_URL","PROVIDERS","image","strings","map","getProvider","providerId","get","getProviderFromUseWalletId","window","navigator","userAgent","indexOf","isMetaMask","UseWalletContext","React","useWallet","walletContext","useContext","getBlockNumber","blockNumber","setBlockNumber","useState","requestedBlockNumber","useRef","useCallback","current","addBlockNumberListener","useEffect","removeBlockNumberListener","useGetBlockNumber","wallet","useMemo","UseWalletProvider","children","connectors","connectorsInitsOrConfigs","pollBalanceInterval","pollBlockNumberInterval","connector","setConnector","setError","setType","status","setStatus","web3ReactContext","useWeb3React","activationId","account","library","web3Error","balance","setBalance","cancel","stopPollingBalance","onUpdate","lastBalance","getAccountBalance","JSBI","BigInt","pollBalance","useWalletBalance","lastBlockNumber","blockNumberListeners","Set","cb","has","add","delete","updateBlockNumber","stopPollingBlockNumber","latestBlockNumber","pollBlockNumber","useWatchBlockNumber","initsOrConfigs","fortmatic","initFortmatic","frame","initFrame","injected","initInjected","portis","initPortis","provided","initProvided","torus","initTorus","walletconnect","initWalletConnect","walletlink","initWalletLink","ledger","initLedger","initOrConfig","entries","getConnectors","active","deactivate","UnsupportedChainIdError","connect","connectorInit","connectorConfig","activate","handledError","getAccountIsContract","isContract","_web3ReactContext","networkName","providerInfo","Provider","UseWalletProviderWrapper","props","Web3ReactProvider","getLibrary","propTypes","PropTypes","defaultProps","string"],"mappings":"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"}